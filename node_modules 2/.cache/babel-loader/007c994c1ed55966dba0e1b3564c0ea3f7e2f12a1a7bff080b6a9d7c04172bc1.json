{"ast":null,"code":"//次文件是定义为Count组件服务的reducer(reducer中最好不要写业务逻辑)\nimport { INCREMENT, DECREMENT } from './constant';\nconst initState = 0;\n/**\n * countReducer专门用于加工Count组件的状态\n * @param {*} preState 第一次调用传入的是undefined，第二次传入的是之前的状态\n * @param {*} action 动作对象，包含:type、data\n */\nfunction countReducer() {\n  let preState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  /* \n  \t若初次调用：\n  \t\t\t(1).preState是undefined，action是内置的一个动作，形如：{type: \"@@redux/INITf.4.s.p.r.8\"}\n  \t\t\t(2).给preState赋初始值，返回preState作为初始状态\n  \t若非初调用，preState是之前的状态，action是一个动作，形如：{type:'???',data:???}\n  \t\t\t(1).根据action中的type值，决定：要做哪一种操作(加？减？)\n  \t\t\t(2).根据action中的data值，决定：加几？减几？\n  */\n  //从action中获取type(类型)、data(加几？减几？)\n  const {\n    type,\n    data\n  } = action;\n  //根据stype的类型，决定接下来干什么\n  switch (type) {\n    case INCREMENT:\n      return preState + data;\n    case DECREMENT:\n      return preState - data;\n    default:\n      return preState;\n  }\n}\nexport default countReducer;","map":{"version":3,"names":["INCREMENT","DECREMENT","initState","countReducer","preState","arguments","length","undefined","action","type","data"],"sources":["/Users/ceciliashi/Desktop/Project/hello_react_cecilia/src/redux/count_reducer.js"],"sourcesContent":["//次文件是定义为Count组件服务的reducer(reducer中最好不要写业务逻辑)\nimport {INCREMENT,DECREMENT} from './constant'\n\nconst initState = 0\n/**\n * countReducer专门用于加工Count组件的状态\n * @param {*} preState 第一次调用传入的是undefined，第二次传入的是之前的状态\n * @param {*} action 动作对象，包含:type、data\n */\nfunction countReducer (preState=initState,action){\n\t/* \n\t\t若初次调用：\n\t\t\t\t(1).preState是undefined，action是内置的一个动作，形如：{type: \"@@redux/INITf.4.s.p.r.8\"}\n\t\t\t\t(2).给preState赋初始值，返回preState作为初始状态\n\t\t若非初调用，preState是之前的状态，action是一个动作，形如：{type:'???',data:???}\n\t\t\t\t(1).根据action中的type值，决定：要做哪一种操作(加？减？)\n\t\t\t\t(2).根据action中的data值，决定：加几？减几？\n\t*/\n\t//从action中获取type(类型)、data(加几？减几？)\n\tconst {type,data} = action\n\t//根据stype的类型，决定接下来干什么\n\tswitch (type) {\n\t\tcase INCREMENT:\n\t\t\treturn preState + data\n\t\tcase DECREMENT:\n\t\t\treturn preState - data\n\t\tdefault:\n\t\t\treturn preState\n\t}\n}\nexport default countReducer"],"mappings":"AAAA;AACA,SAAQA,SAAS,EAACC,SAAS,QAAO,YAAY;AAE9C,MAAMC,SAAS,GAAG,CAAC;AACnB;AACA;AACA;AACA;AACA;AACA,SAASC,YAAYA,CAAA,EAA4B;EAAA,IAA1BC,QAAQ,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAACH,SAAS;EAAA,IAACM,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC/C;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC;EACA,MAAM;IAACE,IAAI;IAACC;EAAI,CAAC,GAAGF,MAAM;EAC1B;EACA,QAAQC,IAAI;IACX,KAAKT,SAAS;MACb,OAAOI,QAAQ,GAAGM,IAAI;IACvB,KAAKT,SAAS;MACb,OAAOG,QAAQ,GAAGM,IAAI;IACvB;MACC,OAAON,QAAQ;EAAA;AAElB;AACA,eAAeD,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}